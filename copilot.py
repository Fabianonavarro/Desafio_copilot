from transformers import pipeline

# Carregar o pipeline de perguntas e respostas
qa_pipeline = pipeline("question-answering")

# Contexto para as perguntas sobre o Microsoft Copilot Studio
contexto = """
O Microsoft Copilot Studio √© uma ferramenta para criar e gerenciar chatbots personalizados. Ele permite
a cria√ß√£o de fluxos interativos para diversos tipos de assistentes virtuais. Ele foi projetado para ser
integrado com outras ferramentas de IA para aprimorar a performance dos bots.
Novidades no Microsoft Copilot Studio incluem integra√ß√µes aprimoradas com o Azure e ferramentas de IA
para melhorar o desempenho do chatbot. O treinamento oferece recursos para aprender a criar chatbots e
personalizar fluxos, enquanto o conceito envolve a cria√ß√£o de assistentes virtuais inteligentes para
automatizar tarefas e interagir com os usu√°rios. Caso enfrente problemas, consulte a documenta√ß√£o oficial
ou entre em contato com o suporte.
"""

# Fun√ß√£o para exibir o menu de perguntas
def exibir_menu():
    """Exibe op√ß√µes de perguntas de forma descontra√≠da"""
    print("\nAgora que voc√™ j√° me conhece, o que voc√™ gostaria de saber sobre o Copilot Studio?")
    print("Aqui est√£o algumas op√ß√µes:")
    print("1. O que √© o Microsoft Copilot Studio?")
    print("2. Quais s√£o as novidades no Microsoft Copilot Studio?")
    print("3. Como posso aprender a usar o Microsoft Copilot Studio?")
    print("4. O que √© o conceito por tr√°s do Copilot Studio?")
    print("5. Estou tendo problemas, o que posso fazer?")
    print("Digite 'sair' para encerrar a conversa.")

# Fun√ß√£o para responder a pergunta de forma mais amig√°vel
def responder_pergunta(opcao):
    """Responde de forma amig√°vel √†s perguntas"""
    perguntas = {
        1: "O que √© o Microsoft Copilot Studio?",
        2: "Quais s√£o as novidades no Microsoft Copilot Studio?",
        3: "Como posso aprender a usar o Microsoft Copilot Studio?",
        4: "O que √© o conceito por tr√°s do Copilot Studio?",
        5: "Estou tendo problemas, o que posso fazer?"
    }
    
    respostas = {
        1: "Ah, o Microsoft Copilot Studio √© uma plataforma super legal para criar chatbots personalizados! "
           "Voc√™ pode criar assistentes virtuais, construir fluxos interativos e integrar com ferramentas de IA "
           "para melhorar o desempenho do seu bot. Legal, n√©?",
        2: "As novidades s√£o incr√≠veis! Agora voc√™ pode integrar ainda mais com o Azure, o que d√° um poder incr√≠vel "
           "para escalar seu chatbot. Tamb√©m houve melhorias nas ferramentas de IA, tornando os bots mais inteligentes "
           "e interativos. Est√° demais!",
        3: "Voc√™ pode aprender tudo de forma super f√°cil com o treinamento do Copilot Studio! Ele te ensina a criar chatbots, "
           "personalizar fluxos e integrar ferramentas. Sem stress, √© bem tranquilo e super acess√≠vel!",
        4: "O conceito √© simples: criar assistentes virtuais inteligentes que ajudam a automatizar tarefas e interagir com "
           "os usu√°rios de maneira fluida e eficiente. √â basicamente a revolu√ß√£o dos bots no dia a dia!",
        5: "Se est√° com problemas, n√£o se preocupe, tudo tem solu√ß√£o! Primeiro, d√° uma olhada na documenta√ß√£o oficial, "
           "que pode ter uma resposta r√°pida. Se n√£o resolver, o suporte t√©cnico est√° a√≠ para te ajudar com tudo o que for "
           "mais espec√≠fico."
    }
    
    pergunta = perguntas.get(opcao)
    resposta = respostas.get(opcao)

    if not pergunta:
        return "Hmmm, n√£o entendi muito bem. Pode escolher um n√∫mero de 1 a 5 ou digitar 'sair' se quiser encerrar?"
    
    return resposta

# Fun√ß√£o para controlar o fluxo de intera√ß√£o, incluindo introdu√ß√£o personalizada
def main():
    """Intera√ß√£o completa com o usu√°rio de forma mais fluida"""
    print("üëã Ol√°, tudo bem? Eu sou o Scoob, seu chat Copilot! Estou aqui para te ajudar com o Microsoft Copilot Studio.")
    
    nome = input("Qual √© o seu nome? ").strip()
    idade = input("Quantos anos voc√™ tem? ").strip()

    # Valida√ß√£o de g√™nero
    while True:
        genero = input("Qual √© o seu g√™nero? (M para Masculino, F para Feminino, O para Outros): ").strip().upper()
        if genero in ['M', 'F', 'O']:
            if genero == 'M':
                genero_str = "Masculino"
            elif genero == 'F':
                genero_str = "Feminino"
            else:
                genero_str = "Outros"
            break
        else:
            print("Resposta inv√°lida. Por favor, digite 'M' para Masculino, 'F' para Feminino ou 'O' para Outros.")

    print(f"\nPrazer em te conhecer, {nome}! üéâ")
    print(f"Com base nas suas respostas, voc√™ √© {genero_str} e tem {idade} anos. Legal!")

    print("\nAgora vamos come√ßar! O que voc√™ gostaria de saber sobre o Copilot Studio? Eu posso te ajudar com isso! ü§ñ")

    while True:
        exibir_menu()
        resposta = input("\nEscolha uma op√ß√£o digitando o n√∫mero correspondente ou digite 'sair' para finalizar a conversa: ").strip()

        if resposta.lower() == 'sair':
            print("\nFoi um prazer conversar com voc√™, " + nome + "! At√© a pr√≥xima! üëãüòâ")
            break

        try:
            opcao = int(resposta)
            resposta_pergunta = responder_pergunta(opcao)
            print(f"CopilotBot: {resposta_pergunta}\n")
        except ValueError:
            print("Ops! N√£o entendi, pode tentar novamente? Escolha um n√∫mero de 1 a 5 ou digite 'sair'.")

if __name__ == "__main__":
    main()
